2010-12-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/Makefile.am: Fixed FTBFS on linux.

	* src/tests/testQueryPlan.cpp: Fixed FTBFS of testsuite.
	* src/tests/testMatch.cpp: Likewise.
	* src/tests/testGraphProp.cpp: Likewise.
	* src/tests/testClaspResultOnlineParser.cpp: Likewise.
	* src/tests/testBlockingClasp.cpp: Likewise.
	* src/tests/Makefile.am: Likewise.

	* include/dyndmcs/Match.h: Include missing list and vector.

2010-12-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dmcs/Makefile.am: Move cache to dmcs directory.
	* src/dmcs/Cache.cpp: Likewise.
	* src/dmcs/StreamingDMCS.cpp: Likewise.
	* src/dmcs/PrimitiveDMCS.cpp: Likewise.
	* src/dmcs/OptDMCS.cpp: Likewise.
	* include/dmcs/Cache.h: Likewise.
	* include/Makefile.am: Likewise.
	* include/dmcs/Makefile.am: Likewise.

	* src/Makefile.am (dmcsd_LDADD): Reorder to fix FTBFS on linux.

2010-12-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Require Boost >= 1.42.

2010-12-08  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Makefile.am: Add missing noinst_LIBRARIES = libcache.a

2010-11-23  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/generator/staticGen.cpp: Improved RNG initialization.

2010-11-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dyndmcs/Makefile.am: New file.
	* src/network/Makefile.am: Likewise.
	* src/loopformula/Makefile.am: Likewise.
	* src/generator/Makefile.am: Likewise.

	* src/Makefile.am: Add new subdirs.
	* configure.ac: Likewise.

	* src/dmcs/BaseDMCS.cpp: Move from src.
	* src/dmcs/BeliefCombination.cpp: Likewise.
	* src/dmcs/ClaspProcess.cpp: Likewise.
	* src/dmcs/OptDMCS.cpp: Likewise.
	* src/dmcs/PrimitiveDMCS.cpp: Likewise.
	* src/dmcs/ProcessBuf.cpp: Likewise.
	* src/dmcs/QueryPlan.cpp: Likewise.
	* src/dyndmcs/DynamicConfiguration.cpp: Likewise.
	* src/dyndmcs/Instantiator.cpp: Likewise.
	* src/generator/DLVVisitor.cpp: Likewise.
	* src/generator/ContextGenerator.cpp: Likewise.
	* src/generator/LogicVisitor.cpp: Likewise.
	* src/generator/dmcsGen.cpp: Likewise.
	* src/generator/dynGen.cpp: Likewise.
	* src/generator/staticGen.cpp: Likewise.
	* src/loopformula/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* src/loopformula/IMPLocalLoopFormulaBuilder.cpp: Likewise.
	* src/loopformula/DimacsVisitor.cpp: Likewise.
	* src/loopformula/LocalLoopFormulaBuilder.cpp: Likewise.
	* src/network/Server.cpp: Likewise.

	* src/BaseDMCS.cpp: Remove.
	* src/BeliefCombination.cpp: Likewise.
	* src/ClaspProcess.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/ProcessBuf.cpp: Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.
	* src/Instantiator.cpp: Likewise.
	* src/DLVVisitor.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/LogicVisitor.cpp: Likewise.
	* src/dmcsGen.cpp: Likewise.
	* src/dynGen.cpp: Likewise.
	* src/staticGen.cpp: Likewise.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* src/IMPLocalLoopFormulaBuilder.cpp: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.
	* src/Server.cpp: Likewise.

2010-11-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/ProcessBuf.cpp: Use unnamed/named pipes for IPC.
	* include/ProcessBuf.h: Likewise.

2010-10-29  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* configure.ac: Add include/loopformula/Makefile.

	* include/network/Makefile.am: Remove network relative path.
	* include/Makefile.am: Remove Match.h

2010-10-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dyndmcs/Makefile.am (noinst_HEADERS): Remove dyndmcs
	relative path.

	* configure.ac (AC_CONFIG_FILES): Add include/dmcs/Makefile.

2010-10-18  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* configure.ac: Add locations of the new Makefile files.

	* src/dynGen.cpp: Now also generate local kb for the student
	example.

	* src/staticGen.cpp: Use topology constant name instead of plain
	number.

	* include/Makefile.am: Adapt Makefile.am to new organization of
	header files.

	* src/genTest.cpp: Remove.

	* include/dyndmcs/Makefile.am: New file.
	* include/generator/Makefile.cam: Likewise.
	* include/parser/Makefile.am: Likewise.
	* include/network/Makefile.am: Likewise.
	* include/loopformula/Makefile.am: Likewise.
	* include/dmcs/Makefile.am: Likewise.

	* include/CommandTypeFactory.h: Adapt including header files.
	* include/network/Handler.h: Likewise.
	* include/network/Server.h: Likewise.
	* include/ClaspProcess.h: Likewise.
	* include/CommandType.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* include/Message.h: Likewise.
	* src/ClaspResultOnlineParser.cpp: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.
	* src/Instantiator.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/Server.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* src/IMPLocalLoopFormulaBuilder.cpp: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.
	* src/tests/testClasp.cpp: Likewise.
	* src/tests/testParser.cpp: Likewise.
	* src/tests/testResult.cpp: Likewise.
	* src/tests/testTranslation.cpp: Likewise.

	* include/loopformula: New sub dir.
	* include/CNFLocalLoopFormulaBuilder.h: Move to
	include/loopformula.
	* include/EquiCNFLocalLoopFormulaBuilder.h: Likewise.
	* include/IMPLocalLoopFormulaBuilder.h: Likewise.
	* include/LocalLoopFormulaBuilder.h: Likewise.
	* include/LoopFormula.h: Likewise.
	* include/LoopFormulaBuidler.h: Likewise.
	* include/LoopFormulaDirector.h: Likewise.

	* include/dmcs: New subdir.
	* include/BaseDMCS.h: Move to include/dmcs.
	* include/OptDMCS.h: Likewise.
	* include/OptCommandType.h: Likewise.
	* include/OptMessage.h: Likewise.
	* include/PrimitiveCommandType.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/PrimitiveMessage.h: Likewise.

	* include/parser: New subdir.
	* include/BRGrammar.h: Move to include/parser.
	* include/BRGGrammar.tcc: Likewise.
	* include/BaseBuilder.h: Likewise.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultGrammar.h: Likewise.
	* include/ClaspResultGrammar.tcc: Likewise.
	* include/ClaspResultOnlineParser.h: Likewise.
	* include/ClaspResultOnlineParser.tcc: Likewise.
	* include/CnfBuilder.h: Likewise.
	* include/CnfBuilder.tcc: Likewise.
	* include/CnfGrammar.h: Likewise.
	* include/CnfGrammar.tcc: Likewise.
	* include/LocalKBBuilder.h: Likewise.
	* include/LocalKBBuilder.tcc: Likewise.
	* include/ParserDirector.h: Likewise.
	* include/ParserDirector.tcc: Likewise.
	* include/PropositionalASPGrammar.h: Likewise.
	* include/PropositionalASPGrammar.tcc: Likewise.
	* include/SpiritDebugging.h: Likewise.
	* include/SpiritFilePositionNode.h: Likewise.

	* include/dyndmcs: New subdir.
	* include/BaseSortingStrategy.h: Move to include/dyndmcs.
	* include/BodySortingStrategy.h: Likewise.
	* include/ChosenCtxSortingStrategy.h: Likewise.
	* include/ChosenQualityCtxSortingStategy.h: Likewise.
	* include/ConfigMessage.h: Likewise.
	* include/ContextSortStrategy.h: Likewise.
	* include/ContextSortingStrategy.h: Likewise.
	* include/ContextSubstitution.h: Likewise.
	* include/DynamicCommandType.h: Likewise.
	* include/DynamicConfiguration.h: Likewise.
	* include/InstantiateBackwardMessage.h: Likewise.
	* include/InstantiateForwardMessage.h: Likewise.
	* include/InstantiateMessage.h: Likewise.
	* include/InstantiateReturnMessage.h: Likewise.
	* include/Instantiator.h: Likewise.
	* include/Instantiator.tcc: Likewise.
	* include/InstantiatorCommandType.h: Likewise.
	* include/Match.h: Likewise.
	* include/NoSBACtxSortingStrategy.h: Likewise.
	* include/NoSBANeighborSortingStrategy.h: Likewise.
	* include/NoSBAQualityCtxSortingStrategy.h: Likewise.
	* include/NoSBARedBBodySortingStrategy.h: Likewise.
	* include/QualityCtxSorting.h: Likewise.
	* include/RedBBodySortingStrategy.h: Likewise.

	* include/network: New subdir.
	* include/Client.h: Move to include/network.
	* include/Client.tcc: Likewise.
	* include/Handler.h: Likewise.
	* include/Handler.tcc: Likewise.
	* include/Server.h: Likewise.
	* include/Session.h: Likewise.
	* include/connection.h: Likewise.

	* include/BinaryTreeQPGenerator.h: Remove.
	* include/DiamondOptQPGenerator.h: Likewise.
	* include/DiamondQPGenerator.h: Likewise.
	* include/DiamondZigZagOptQPGenerator.h: Likewise.
	* include/DiamondZigZagQPGenerator.h: Likewise.
	* include/DynCtxGenBaseBuilder.h: Likewise.
	* include/DynCtxGenGridBuilder.h: Likewise.
	* include/DynCtxGenRakeBuilder.h: Likewise.
	* include/DynCtxGenRandomBuilder.h: Likewise.
	* include/HouseOptQPGenerator.h: Likewise.
	* include/HouseQPGenerator.h: Likewise.
	* include/MultipleRingOptQPGenerator.h: Likewise.
	* include/MultipleRingQPGenerator.h: Likewise.
	* include/RingEdgeQPGenerator.h: Likewise.
	* include/RingOptQPGenerator.h: Likewise.
	* include/RingQPGenerator.h: Likewise.
	* include/Server.tcc: Likewise.

2010-10-15  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Create helper functions for reading
	data. Reorganize dynamic/static case.

2010-10-14  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Add killall dmcsd at the beginning of the shell script.

2010-10-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/ParserDirector.tcc: Use getline() to fill up buf instead
	of rdbuf().

2010-10-13  Minh Dao Tran  <dao@.kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Add new heuristics.

	* include/BaseSortingStrategy.h: Define constants for heuristic cases.

	* include/Makefile.am: Add QualityCtxSortingStrategy.h.
	* include/QualityCtxSortingStrategy.h: New file.

	* include/NoSBACtxSortingStrategy.h: Changed guarding macro.
	* include/ChosenQualityCtxSortingStrategy.h: Likewise.
	* include/ChosenCtxSortingStrategy.h: Likewise.
	* include/NoSBAQualityCtxSortingStrategy.h: Likewise.

2010-10-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/CommandTypeFactory.h: Return new objects for create().

	* include/DynamicCommandType.h: Remove some debugging information.

2010-10-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Enable static mode.

	* include/PrimitiveCommandType.h: Add PrimitiveCommandTypePtr.

	* include/OptCommandType.h: Add OptCommandTypePtr.

	* include/Handler.tcc: Remove #include "Handler.h"

	* include/CommandTypeFactory.h: Add support for PrimitiveDMCS and OptDMCS.
	* src/Server.cpp: Likewise.

2010-10-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Fix the case where we get a
	constant context id and still need to bind the schematic belief.

2010-10-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Instantiator.cpp: Remove duplicate code.

	* include/Instantiator.tcc: New file.
	* include/Instantiator.h: include Instantiator.tcc.

2010-10-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Server.tcc: Remove.

	* include/Makefile.am: Add
	InstantiateForwardMessage.h and InstantiateBackwardMessage.h.

	* include/Instantiator.h: Adapt to new types of
	instantiating messages.
	* include/InstantiatorCommandType.h: Likewise.
	* src/Instantiator.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.

	* include/InstantiateMessage.h: Make it a base class for
	forward/backward messages in instantiating.

2010-10-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsc.cpp: Clean up.

	* src/Instantiator.cpp Add some debugging information. Create
	instantiated bridge rules.

	* src/DynamicConfiguration.cpp: Cover the case where the context
	was already used for instantiation but the atom was not.

	* include/Match.h: Index by SrcSymTar.

	* include/CommandTypeFactory.h: Move inst, cmt_inst as a member of
	CommandTypeFactory.

2010-10-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Message.h: Refine header messages.

	* include/Handler.h: Add send_eof().
	* include/Handler.tcc: Likewise.

	* include/Client.tcc: Add some debugging information

2010-10-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Remove calling specific servers
	just for configuration.

	* src/Server.cpp: Clean up.
	* include/Handler.tcc: Likewise.

2010-10-03  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsc.cpp: Use Server with dispatch ability.

	* src/Makefile.am: Add Server.cpp.

	* src/Server.cpp: New file.

	* include/Server.h: Add dispatch method.

	* include/Handler.h: Pass cmd as a parameter of the
	handling operators. This fix the problem of cmd (as a member
	variable) being changed after async_ operator. This is a very
	weird bug!
	* include/Handler.tcc: Likewise.

	* include/DynamicCommandType.h: Add some debugging information.
	* include/DynamicConfiguration.h: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.

	* include/CommandTypeFactory.h: Use member dconf and
	cmt_dyn_conf. This fixed losing dconf/cmt_dyn_dconf through the
	dynamic creation of the commandtype.

	* include/Client.tcc: Directly use async_write from connection.h.

2010-09-30  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Handler.tcc: Likewise.

	* include/Handler.h: Change to CmdTypePtr member.

	* include/Instantiator.h: Add context_info.
	* src/Instantiator.cpp: Get neighbors' information from context_info.

	* include/Server.tcc: Create specific CommandTypes based on the
	header received.

	* include/Server.h: Add a CommandTypeFactory member.
	* src/dmcsd.cpp: Adapt construction of Server.

	* include/Makefile.am: Add CommandTypeFactory.h.

	* include/DynamicCommandType.h: Introduce DynamicCommandTypePtr.
	* include/InstantiatorCommandType.h: Introduce InstantiatorCommandTypePtr.

	* include/CommandTypeFactory.h: New file.


2010-09-29  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Remove template from Server.

	* include/Server.h: Turning to a dispatcher (remove template).
	* include/Server.tcc: Likewise.

	* include/Message.h: Add HEADER_ANS.

	* include/Makefile.am: Add Handler.h.

	* include/Handler.h: New file.
	* include/Handler.tcc: Likewise.

2010-09-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Message.h: Add header constants.

	* include/Client.h: Add header stuff to Client. Rearrange handling
	methods.
	* include/Client.tcc: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.
	* src/Instantiator.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.

2010-09-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Instantiator.cpp: Properly call uninstantiated neighbors.

	* include/Server.tcc: Show result sent back.

	* include/InstantiateMessage.h: Output history.
	* include/InstantiateReturnMessage.h: Likewise.

2010-09-27  Minh Dao Tran  <minhdt@e195-105.eduroam.tuwien.ac.at>

	* src/Instantiator.cpp: Invoke neighbors to instantiate.

	* include/Message.h: Move History here.

	* include/Makefile.am: Add InstantiateReturnMessage.h.

	* include/Instantiator.h: Use InstantiateReturnMessage (with
	history) instead of just returning bool.
	* include/InstantiatorCommandType.h: Likewise.
	* src/dmcsc.cpp: Likewise.

	* include/InstantiateReturnMessage.h: New file.

	* include/InstantiateMessage.h: Use HistoryPtr.

2010-09-27  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Instantiator.cpp: Collect neighbors from ctx_subs.

	* include/PrimitiveMessage.h: Move typedef History to Message.h
	* include/Message.h: Likewise.

	* include/Instantiator.h: Add ctx_id.

	* include/InstantiateMessage.h: Add history.

2010-09-24  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Server.h: Add ports for different purposes.
	* include/Server.tcc: Comment out the output result.

	* src/dmcsc.cpp: Change port to call config server, call
	instantiate sever.

	* src/Instantiator.cpp: Build global_sigs during instantiation.

	* src/DynamicConfiguration.cpp: Call config server at port 7000+cid.

2010-09-24  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Instantiator.cpp: Working on instantiation.

	* include/Instantiator.h: Add global_sigs.

	* include/ContextSubstitution.h: Add ContextSubstitutionBySrcSym.

2010-09-23  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Makefile.am: Add Instantiator.cpp

	* include/Makefile.am: Add new header files.

	* include/InstantiateMessage.h: New file.
	* include/Instantiator.h: Likewise.
	* include/InstantiatorCommandType.h: Likewise.
	* src/Instantiator.cpp: Likewise.

	* include/CommandType.h: Add a specialized case with RetVal == bool

2010-09-21  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Makefile.am: Add new header files.

	* include/generator/DynGridTopoGenerator.h: New file.
	* include/generator/DynRakeTopoGenerator.h: Likewise.
	* include/generator/DynRandomTopoGenerator.h: Likewise.
	* include/generator/DynTopologyGenerator.h: Likewise.
	* src/dynGen.cpp: Likewise.

2010-09-20  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/staticGen.cpp: Add new topologies.

	* include/generator/OptTopologyGenerator.h: Fix some warnings.
	* include/generator/TopologyGenerator.h: Likewise.

	* include/generator/ContextGenerator.h: Remove uneccessary
	parameters.
	* src/ContextGenerator.cpp: Likewise.

	* include/Makefile.am: Add new header files for new topologies.

	* include/generator/BinaryTreeTopoGenerator.h: New file.
	* include/generator/MultipleRingTopoGenerator.h: Likewise.
	* include/generator/MultipleRingOptTopoGenerator.h: Likewise.
	* include/generator/HouseOptTopoGenerator.h: Likewise.

2010-09-17  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/generator/RingEdgeTopoGenerator.h: New file.
	* include/generator/RingTopoGenerator.h: Likewise.
	* include/generator/RingOptTopoGenerator.h: Likewise.
	* include/generator/HouseTopoGenerator.h: Likewise.

	* include/Makefile.am: Add new header files.

	* src/staticGen.cpp: Add new topologies.

2010-09-17  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/generator/OptTopologyGenerator.h: Separate
	OptTopoGenerator from TopoGenerator.
	* include/generator/DiamondZigZagOptTopoGenerator.h: Likewise.
	* include/generator/DiamondOptTopoGenerator.h: Likewise.
	* src/staticGen.cpp: Likewise.

	* include/generator/DiamondTopoGenerator.h: Typo.

2010-09-17  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/generator/TopologyGenerator.h: Rename
	ZIGZAG_DIAMOND_TOPOLOGY to DIAMOND_ZIGZAG_TOPOLOGY.
	* src/staticGen.cpp: Likewise.

	* include/generator/DiamondZigZagOptTopoGenerator.h: Remove edges
	when optimizing the topology.

2010-09-16  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/staticGen.cpp: Separate original topo generation from
	optimal topo generation.

	* include/generator/TopologyGenerator.h: Remove local interface map.

	* include/generator/DiamondTopoGenerator.h (create_opt_interface): Remove.

	* include/generator/DiamondOptTopoGenerator.h: Now inherits from
	OptTopologyGenerator

	* include/generator/ContextGenerator.h: include OptTopologyGenerator.h

	* include/Makefile.am: Add new header files.

	* include/generator/DiamondArbitraryTopoGenerator.h: New file.
	* include/generator/OptTopologyGenerator.h: Likewise.
	* include/generator/DiamondZigZagTopoGenerator.h: Likewise.
	* include/generator/DiamondZigZagOptTopoGenerator.h: Likewise.

	* m4/boost.m4: merged from trunk, to fix  the problem with boost 1.44 iostream lib check.

2010-09-15  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/ProcessBuf.cpp: Merged SIGCHILD signal handler from trunk.

	* src/QueryPlanGenerator.cpp: Add random case.

	* include/RandomQPGenerator.h: Reduce probability for generating neighbors.

	* include/DynCtxGenRandomBuilder.h: Add density parameter.

	* src/dynGen.cpp: Generate Grid topology.

	* include/Makefile.am: add DynCtxGenGridBuilder.h.

	* include/BodySortingStrategy.h: New file.
	* include/ContextSortStrategy.h: Likewise.
	* include/DynCtxGenGridBuilder.h: Likewise.

2010-09-15  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/tests/testClaspResultOnlineParser.cpp: Rename V --> belief_state.

	* include/generator/TopologyGenerator.h: Rename iterator.

	* include/generator/DiamondOptTopoGenerator.h: New file.

	* src/tests/testBlockingClasp.cpp: New testcase.
	* src/tests/testGraphProp.cpp: Likewise.

2010-09-12  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dmcsc.cpp (main): Output of equilibria and number goes to
	cout.

2010-09-12  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsc.cpp: Adapt output to format in the paper.
	* include/Server.tcc: Turn off "go to finalize" message.

2010-09-11  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsc.cpp: Quick hack to print output. Now one needs to
	specify --mamanger=TEMPLATE.TOP in the commandline of dmcsc. For
	example, in the scientist example, we need to put
	--manager=scientist.top.

2010-09-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/QueryPlan.h: Clean up.
	* include/QueryPlan.tcc: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/QueryPlan.cpp: Likewise.

	* src/staticGen.cpp: Commandlines generated. Adapt dlv command
	lines generator. Now all the xxx1 methods are gone.

2010-09-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/staticGen.cpp: Copy lcim to opt_lcim.

	* include/QueryPlan.h: Use VertexMapPtr.
	* src/QueryPlan.cpp: Likewise.

2010-09-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/QueryPlan.tcc: Templatize get/put properties methods.

	* src/staticGen.cpp: Write graph.

	* include/QueryPlanWriter.h: make some methods inline.

	* include/QueryPlan.h: Turn QueryPlan to a struct.

2010-09-03  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Makefile.am: Use libdmcs.a for dmcsGen.

	* src/ContextGenerator.cpp: Set V[root] to maxBeliefSet()

	* include/generator/TopologyGenerator.h: Use constants for topology_type.

	* include/generator/ContextGenerator.h: Add topology_type.
	* src/staticGen.cpp: Adapt in the call.

	* include/QueryPlan.h: Remove ***1() methods.
	* src/QueryPlan.cpp: Likewise.

2010-09-01  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/ContextGenerator.cpp: Generate local_interfaces and minV.

	* include/generator/dmcsGen.h: More some typedef and #define to
	ContextGenerator.h

	* include/generator/ContextGenerator.h: More members for
	ContextGenerator: prefix, minV.

	* include/generator/TopologyGenerator.h: Use NeighborVec instead
	of NeighborList.
	* include/generator/DiamondTopoGenerator.h: Likewise.
	* src/staticGen.cpp: Likewise.

2010-09-01  Minh Dao Tran  <dao@kr.tuwien.ac.at>
	* include/generator/ContextGenerator.h: Finished generating
	local_kb and bridge_rules.
	* include/generator/dmcsGen.h: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/staticGen.cpp: Likewise.

	* src/Makefile.am: Add ContextGenerator.cpp and LogicVisitor.cpp
	to dmcsGen_SOURCES

2010-08-31  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/generator: new sub directory for generators' header
	files.
	* include/generator/TopologyGenerator.h: New file.
	* include/generator/ContextGenerator.h: Likewise.
	* include/generator/DiamondTopoGenerator.h: Likewise.
	* include/generator/DiamondOptTopoGenerator.h: Likewise.
	* include/generator/dmcsGen.h: Likewise.

	* src/dmcsGen.cpp: New file.
	* src/staticGen.cpp: Likewise.

	* include/Makefile.am: Add new header files for dmcsGen. Remove
	header files from genTest.

	* src/Makefile.am: add dmcsGen, remove genTest.

	* src/ContextGenerator: light weight implementation. No more use
	of Context, QueryPlan.

2010-08-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/ParserDirector.tcc: Add debug output.

	* include/BridgeRulesBuilder.tcc: Add some assertions for local
	and neighbor ids.

2010-08-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/ClaspResultOnlineParser.cpp: Only start instantiating things
	when input stream is good.

	* include/Makefile.am (noinst_HEADERS): Add ClaspResultOnlineParser.tcc.

	* include/ClaspResultOnlineParser.h: Move ClaspResultOnlineGrammar
	to tcc file.
	Add ClaspResultOnlineGrammar::reset() method.
	* include/ClaspResultOnlineParser.tcc: Likewise.

2010-08-02  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/tests/Makefile.am: Typo.

	* include/ClaspResultOnlineParser.h: Update using getNextAnswer()
	and return NULL at the end.k
	* src/ClaspResultOnlineParser.cpp: Likewise.
	* src/tests/testClaspResultOnlineParser.cpp: Likewise.

2010-08-02  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/ClaspResultBuilder.tcc: Typo.

	* src/tests/testClaspOnlineParser.cpp: Test getNextAnswer() strategy.

	* include/ClaspResultOnlineParser.h: New file.
	* src/ClaspResultOnlineParser.cpp: Likewise.

	* src/Makefile.am: add ClaspResultOnlineParser.cpp

	* include/Makefile.am: add ClaspResultOnlineParser.h

2010-07-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testClaspOnlineParser.cpp: Make it a Boost.Test case.
	Rename.
	* src/tests/clasp-parser-full.cpp: Likewise.

	* src/tests/result.sat: Move to examples.
	* examples/result.sat: Likewise.

	* src/tests/Makefile.am: Add testClaspOnlineParser test.

2010-07-24  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/tests/clasp-parser-full.cpp: New file.

2010-07-23  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsd.cpp (main): Add assertion for system size

2010-07-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/ProcessBuf.cpp: Add SIGCHLD signal handler.

	* src/tests/testClasp.cpp: Compileable again.
	* src/tests/testTranslation.cpp: Likewise.

	* examples/clasp-result.txt: Terminate models with 0.

	* TODO: Update.

2010-07-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/ProcessBuf.cpp: Add SIGCHLD signal handler.

	* src/tests/testClasp.cpp: Compileable again.
	* src/tests/testTranslation.cpp: Likewise.

	* examples/clasp-result.txt: Terminate models with 0.

	* TODO: Update.

2010-07-14  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Take a longer prefix.

	* src/DynamicConfiguration.cpp: Add new heuristics.
	* src/dynGen.cpp: Likewise.

	* include/Makefile.am: Add new header files.

	* include/ChosenQualityCtxSortingStrategy.h: New file.
	* include/NoSBANeighborSortingStrategy.h: Likewise.
	* include/NoSBAQualityCtxSortingStrategy.h: Likewise.

	* include/ChosenCtxSortingStrategy.h: Update quality calculation.
	* include/NoSBACtxSortingStrategy.h: Likewise.

2010-07-13  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Makefile.am: Add NoSBACtxSortingStrategy.h

	* include/ContextSubstitution.h: ContextSubstitution as a
	multi-index container now.

	* include/ContextSortingStrategy.h: Use MatchTableIteratorVec::iterator
	* include/ChosenCtxSortingStrategy.h: Likewise.
	* include/NoSBASortingStrategy.h (dmcs): Likewise.

	* include/NoSBACtxSortingStrategy.h: New file.

	* include/DynamicConfiguration.h: Compute statistical information.
	* src/DynamicConfiguration.cpp: Likewise.
	* include/Match.h: Likewise.

2010-07-12  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/BridgeRulesBuilder.tcc: Update debugging information.
	* src/dmcsc.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.

	* src/dynGen.cpp: Output log information to files.

	* src/genTest.cpp: Add random topology.
	* include/RandomQPGenerator.h: New file.

2010-07-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Generate different sets
	of command lines wrt. different heuristics.

	* src/dmcsd.cpp: Transfer prefix to dconf.

	* src/DynamicConfiguration.cpp: Output resulted topologies indexed
	by heuristics type and result number.

	* include/DynamicConfiguration.h: Add prefix.

2010-07-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Add option for choosing heuristics.
	* include/DynamicConfiguration.h: Likewise.
	* include/ProgramOptions.h: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.
	* src/dynGen.cpp: Likewise.

2010-07-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Add Rake topology.

	* include/DynCtxGenRakeBuilder.h: New file.

2010-07-07  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Initialize some ptr.

	* include/DynCtxGenRandomBuilder.h: Lower the probability to have
	matches between contexts.

	* include/DynCtxGenBaseBuilder.h: Initialize
	pattern_bridge_rules. Fixed Segmentation fault.

	* include/ChosenCtxSortingStrategy.h: Make this heuristic very
	simple: just give the chosen contexts more priority.

2010-07-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/DynCtxGenBaseBuilder.h: New file.
	* include/DynCtxGenRandomBuilder.h: Likewise.

	* include/Makefile.am: Add DynCtxGenBaseBuilder.h and
	DynCtxGenRandomBuilder.h

	* src/dynGen.cpp: Update the generator to generate different type
	of intial topologies.

2010-07-06  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Generate script to run test cases automatically.

	* src/dmcsd.cpp: Sort sbridge atoms before binding.
	* include/RedBBodySortingStrategy.h: Likewise.
	* include/NoSBARedBBodySortingStrategy.h: Likewise.

2010-07-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Extract reduced bridge bodies from bridge rules
	for sorting (next).

	* include/Rule.h: New typedef for representing reduced
	bridge bodies.

	* include/NoSBARedBBodySortingStrategy.h: New file.
	* include/RedBBodySortingStrategy.h: Likewise.

	* include/Makefile.am: Add NoSBARedBBodySortingStrategy.h and
	RedBBodySortingStrategy.h

2010-07-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Sort new contexts before invoke.

	* include/DynamicConfiguration.h: Control DFS by iterators of
	iterators to a vector of contexts.

2010-07-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Use sorted list of iterators to
	contexts for binding.

	* include/NoSBASortingStrategy.h: Fix quality calculation.

	* include/ContextSortingStrategy.h: Add dfs_level.
	* include/ChosenCtxSortingStrategy.h: Likewise.

	* include/BaseSortingStrategy.h: Move TABS(dfs_level) here.
	* include/DynamicConfiguration.h: Remove TABS(dfs_level) from here.

2010-07-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Fix bug in generating nosbas.

2010-07-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Makefile.am: Add ContextSortingStrategy.h

	* include/ContextSortingStrategy.h: New file.

	* include/ContextSubstitution.h: Need ContextVec and list of its iterator.

	* include/BaseSortingStrategy.h: Templatize the sorting
	strategies.
	* include/NoSBASortingStrategy.h: Likewise.
	* include/ChosenCtxSortingStrategy.h: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.

2010-07-04  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Use limit_answers, limit_bind_rules.
	* src/dynGen.cpp: Likewise.
	* include/ProgramOptions.h: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.

2010-07-02  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Generate empty file for the last context if it
	has no pointer to other contexts.

	* src/DynamicConfiguration.cpp: Write output topology on separate
	files, without duplications of edges.

	* include/DynamicConfiguration.h: Add parameter dfs_level to compute_topology.

2010-07-01  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Compute output topolofy.

	* include/DynamicConfiguration.h: Add graph for output topology.

	* include/ContextSubstitution.h: Use ContextID.

	* include/ChosenCtxSortingStrategy.h: Fix bug for querying with
	source context id.

2010-07-01  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: We can now stop at a limit number
	of answers.

	* include/DynamicConfiguration.h: Move limit_answers to be
	member of dynconf. Also introduce new members no_answers and stop.

	* include/BaseSortingStrategy.h: quality needs to be initialized.

2010-06-30  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dynGen.cpp: Tests generated. Build initial topology for
	later comparison with the instantiated topology. Add program options.

2010-06-29  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/Makefile.am: Add dynGen

	* src/dynGen.cpp: New file.

2010-06-29  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Match.h: Add possibility to query by srcCtx.

	* include/Makefile.am: Add ChosenCtxSortingStrategy.h

	* include/DynamicConfiguration.h: Add limit_answers.
  	* src/DynamicConfiguration.cpp: Likewise.

	* include/ContextSubstitution.h: Another quick, dirty hack for
	already_chosen check.

	* include/ChosenCtxSortingStrategy.h: New strategy.

	* include/BaseSortingStrategy.h: Use map for quality storage.
	* include/NoSBASortingStrategy.h: Update quality calculation.

2010-06-28  Minh Dao Tran  <minhdt@e194-209.eduroam.tuwien.ac.at>

	* include/Makefile.am: Add BaseSortingStrategy.h and NoSBASortingStrategy.h

	* include/BaseSortingStrategy.h: New file.
	* include/NoSBASortingStrategy.h: Likewise.

	* src/DynamicConfiguration.cpp: Sort potential neighbors before binding.

	* src/dmcsd.cpp: Read number of schematic bridge atoms from mm file.

	* include/Match.h: MatchMaker --> MatchTable.
	* include/DynamicConfiguration.h (dmcs): Likewise.
	* src/tests/testMatch.cpp: Likewise.

	* include/ContextSubstitution.h: Some new typedef.

2010-06-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: More intuitive debugging output.

2010-06-25  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Hierachical debugging information
	for the DFS.
	* include/DynamicConfiguration.h: Likewise.

2010-06-21  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Consider case of inconsistent
	substitutions on 1 context variable.

2010-06-21  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Fix bug: calculating new neighbors.

	* src/dmcsc.cpp: Print final result.

2010-06-20  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/ContextSubstitution.h: minor changes.

	* src/DynamicConfiguration.cpp: Working on lconfig + bind_rule + invoke_neighbors.

2010-06-20  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Add some comments.

	* include/DynamicConfiguration.h: Add invoke_neighbors.
	* src/DynamicConfiguration.cpp: Likewise.

	* include/ContextSubstitution.h (already_chosen): A quick hack to
	get new chosen contexts, will be replaced by STL stuff later.

2010-06-18  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Fix bind_rule and lconfig. Both
	now return a list of context substitution. lconfig is not yet
	completed, invoke_neighbors is missing when R = \emptyset.

	* include/Rule.h: Better debugging information.
	* include/Server.tcc: Likewise.
	* src/dmcsd.cpp: Like wise.

	* include/Variable.h: Add some helper functions for outputing
	context terms and schematic believes nicely.

	* include/ContextSubstitution.h: Fix some output operator.

	* include/ConfigMessage.h: Print context substitution's content.

	* include/BridgeRulesBuilder.tcc: Add some debugging information.


2010-06-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/ClaspResultGrammar.tcc: Fix to SAT'09 & clasp 1.3.4
	result format (0 was missing).
	* include/ClaspResultGrammar.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* examples/dimacs-small-result.txt: Likewise.

	* configure.ac: Check for clasp >= 1.3.4.

2010-06-16  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/run-tests.sh: Update run-tests.

	* include/Cache.h: Include map.

2010-05-31  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Read context information from match maker and
	give it to dconf. We need this to invoke neighbors from a dynamic
	configuration.

	* include/Neighbor.h: Add operator>> for Neighbor.

	* include/ContextSubstitution.h: ContextSubstitutions -->
	ContextSubstitutionList.
	* include/DynamicCommandType.h: Likewise.
	* src/DynamicConfiguration.cpp: Likewise.

	* examples/student.inp: Update input with context information.

2010-05-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/DynamicConfiguration.cpp: Add missing header files.
	* src/OptDMCS.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.

2010-05-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/CommandType.h: Split sub command types to new files.
	* include/Makefile.am: Adapt to this change.

	* include/DynamicCommandType.h: New file.
	* include/OptCommandType.h: Likewise.
	* include/PrimitiveCommandType.h: Likewise.

2010-05-28  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* include/Variable.h: Casted 1 to ContextTerm for safe shifting.

	* include/BridgeRulesBuilder.tcc: More beautiful bit style debug
	informaiton.

	* src/dmcsc.cpp: Clean a bit.

2010-05-27  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Fix neighbor list construction.
	* include/BridgeRulesBuilder.tcc: Likewise.

2010-05-27  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Get sig from global_sigs, not from query_plan.

	* include/CommandType.h: Clean up.
	* include/Server.tcc: Likewise.

	* include/DynamicConfiguration: Define dynmcs_value_type for
	non-statistic case.

2010-05-26  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Fixed merging bugs. It's now compiled.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/CommandType.h: Likewise.
	* include/DynamicConfiguration.h: Likewise.
	* include/Message.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* include/Signature.h: Likewise.
	* include/Makefile.am: Likewise.

	* include/ConfigMessage.h: New file.

2010-05-07  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* src/DLVVisitor.cpp: Need 'a' - 1.
	* src/LogicVisitor.cpp: Likewise.
	* src/genTest.cpp: Likewise.

	* src/BeliefCombination.cpp: Add a remark for a chance to improve
	projection.

2010-05-07  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/ContextGenerator.cpp: Clean up

2010-05-07  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/genTest.cpp: Use a single srand().
	* src/QueryPlanGenerator.cpp: Likewise.

2010-05-07  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/ContextGenerator.h: Use no_interface_atoms in generating
	bridge rules.
	* src/ContextGenerator.cpp: Likewise.
	* src/genTest.cpp: Likewise.

	* src/LogicVisitor.cpp: Fix stupid bug: 96 vs. 'a'
	* src/DLVVisitor.cpp: Likewise.

2010-05-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

2010-05-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/run-tests.sh: New file.

2010-05-06  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/dmcsd.cpp: Fix cerr here and there.
	* src/dmcsc.cpp: Likewise.

	* include/StatsInfo.h: Add time_in_secs()

	* src/OptDMCS.cpp: Fix: incoming V for guessing, outgoing V
	for combining.
	* include/OptDMCS.h: Likewise.

	* include/PrimitiveMessage.h: Use history as a list.
	* src/PrimitiveDMCS.cpp: Likewise.

2010-05-06  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/OptDMCS.cpp: Clean up.
	* src/PrimitiveDMCS.cpp: Likewise.

2010-05-06  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Initialize OptDMCS with global_sigs.

	* src/OptDMCS.cpp: Use ProxySignatureByLocal.

	* include/OptDMCS.h: Now inherits global sigs from BaseDMCS.
	* include/PrimitiveDMCS.h: Likewise.

	* include/BaseDMCS.h: Move global_sigs up here.
	* src/BaseDMCS.cpp: Likewise.

2010-05-06  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/ProxySignatureByLocal.h: Use ProxySignatureByLocal in PrimitiveDMCS.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/BaseDMCS.h: Likewise.

2010-05-06  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* include/Neighbor.h: Use Neighbor instead of QueryPlan to
	get hostname and port
	* src/genTest.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* include/QueryPlan.h: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/Context.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BaseDMCS.h (dmcs): Likewise.

	* src/OptDMCS.cpp: Use the right V at the right place.

2010-05-06  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Get neighbor_list from bridge rules parsing.

	* src/PrimitiveDMCS.cpp: Use neighbors from context.
	* src/OptDMCS.cpp: Likewise.

	* src/ContextGenerator.cpp: Adapt to neighbor_list.
	* src/genTest.cpp: Likewise.

	* include/Context.h: Let neighbor_list be a member of context.

	* include/ClaspResultGrammar.tcc: #if --> #ifdef

	* include/BridgeRulesBuilder.tcc: Update neighbor_list based on
	bridge atoms.

2010-05-06  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/genTest.cpp: Fix neighbor access

	* src/QueryPlan.cpp: used getHostName1 and getPort1 as we are still in generation mode

	* include/Context.h: Add setNeighbors method

2010-05-05  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* include/QueryPlan.h: Replace Neighbors by NeighborList.
	* include/Signature.h: Replace Signatures by SignatureVec.
	* src/genTest.cpp: Likewise.
	* src/dmcsd.cpp): Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/Neighbor.h: Likewise.
	* include/Context.h: Likewise.

	* include/BridgeRulesBuilder.tcc: Build neighbor_list from
	bridge rules.
	* include/BridgeRulesBuilder.h: Likewise.

2010-05-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>

	* src/OptDMCS.cpp: Adapt generation of V.
	* src/PrimitiveDMCS.cpp: Likewise.

	* src/BaseDMCS.cpp: Add case distinction whether to initiate sis
	in the constructor

	* include/Makefile.am: Add ProxySignatureByLocal.h

	* include/ProxySignatureByLocal.h: Detail the methods.


	* src/dmcsd.cpp: Create global_sigs and pass it to PrimitiveDMCS.

	* src/OptDMCS.cpp (getBeliefStates): Move construction of
	signatures from SatSolver here. Will be replaced by
	ProxySignatureByLocal.
	* src/PrimitiveDMCS.cpp (getBeliefStates): Likewise.

	* include/Signature.h: Add Signatures and SignaturesPtr.

	* include/Server.tcc: update debug information.

	* include/Process.h: templatized with ModelBuilder.

	* include/PrimitiveDMCS.h: Add sis for statistic information, add
	createGuessingSignature(). Add global_sigs.

	* include/OptDMCS.h: Add createGuessingSignature().

	* include/Context.h: Add getNeighbors().

	* include/ClaspResultBuilder.tcc: Remove sig_size and use
	local_sig.size()

	* include/ClaspResultBuilder.h: Use BeliefStateListPtr instead of
	BeliefStateListPtr&.

	* include/ClaspProcess.h: Instantiated with
	Process<ClaspResultBuilder<ClaspResultGrammar> >
	* include/ClaspProcess.h: Likewise.

	* src/BaseDMCS.cpp (localSolve): Use ClaspResultBuilder with sig,
	local_belief_states and sis_size. @todo: remove dependency on
	query_plan.
	+ new methods for creating guessing signature.

	* include/BaseSolver.h: Pass theory and sig_size to solve()
	instead of context_signature, belief_states, and theory.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.

2010-05-05  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/OptDMCS.cpp : Adjust code syntax for compilation purposes.
	* src/PrimitiveDMCS.cpp: Likewise.

	* include/ProxySignatureByLocal.h: Cleanup

	* include/ClaspResultBuilder.h : Adapt Builder to use SignatureByLocal instead of BeliefStatePtr
	* include/ClaspResultBuilder.tcc: Likewise.

	* include/BaseDMCS.h: Adapt solve to use SignatureByLocal instead of BeliefStatePtr
	* include/SatSolver.h : Likewise.
	* include/BaseSolver.h: Likewise.
	* include/SatSolver.tcc : Likewise.
	* src/BaseDMCS.cpp : Likewise.

2010-05-05  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* include/BridgeRulesBuilder.h: add a remark for removing sig.

2010-05-04  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/PrimitiveDMCS.cpp : Add ProxySignature todo items.
	* src/OptDMCS.cpp: Likewise.
	* include/SatSolver.tcc : Likewise.

	* include/ProxySignatureByLocal.h: New file.

	* include/HouseOptQPGenerator.h : Update queryplan computation.

2010-05-04  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/StatsInfo.h: Use PTime/TimeDuration instead of
	PTimePtr/TimeDurationPtr. Provide (time + #models) in statistic
	information.
	* include/ReturnMessage.h: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.

	* include/SatSolver.tcc: Fix segmetation fault.

2010-05-04  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsc.cpp: Fix output info.

	* include/ClaspResultGrammar.tcc: Fix parsing models with older
	boost.

2010-05-04  Minh Tran Dao  <dao@.kr.tuwien.ac.at>
	* src/BeliefCombination.cpp: remove some debug output.

	* include/OptDMCS.h: Adapt OptDMCS to returning
	statistic information.
	* src/OptDMCS.cpp: Likewise.
	* include/CommandType.h: Likewise.
	* src/dmcsc.cpp: Likewise.

	* include/BeliefState.h: Update operator<<
	* include/PrimitiveMessage.h: Likewise.
	* include/StatsInfo.h: Likewise.

	* src/PrimitiveDMCS.cpp: Fix SegFault and get transfer time.

	* include/ReturnMessage.h: Update outputting result.

	* include/StatsInfo.h: Update outputting result, update transfer
	time from neighbors.

2010-05-04  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/StatsInfo.h: Add STATS_DIFF and STATS_DIFF_REUSE macros.
	Do some code clean-ups.
	* src/PrimitiveDMCS.cpp: Likewise.
	* include/BaseDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/CommandType.h: Likewise.

2010-05-03  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* configure.ac: Add BOOST_DATE_TIME

	* src/PrimitiveDMCS.cpp: Add statistic information.
	* src/dmcsc.cpp: Likewise.

	* include/StatsInfo.h: Define operator<< and combine()

	* include/Server.tcc: Add some debug information.

	* include/Message.h: Remove sub-messages and put them to
	separated files.
	* include/OptDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/Session.h: Likewise.
	* include/Makefile.am: Likewise.

	* include/OptMessage.h: New file.
	* include/PrimitiveMessage.h: Likewise.
	* include/ReturnMessage.h: Likewise.

	* include/CommandType.h: Realize continues().

	* include/BaseDMCS.h: Add case distinction for StatisticInformation.

2010-05-02  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/Makefile.am: Add date_time library.
	* include/Makefile.am: Add StatsInfo.h

	* include/Client.h: Use CmdType instead of Message_t.
	* include/Client.tcc: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* include/Message.h: Likewise.
	* include/CommandType.h: Likewise.

	* include/Message.h: Add ReturnMessage.
	* include/StatsInfo.h: New file.

2010-05-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/BeliefCombination.cpp: Fix debug output.
	(dmcs::project_to): Sort and unique projection result.

	* include/SatSolver.tcc (dmcs::solve): Throw exception when there
	was an error during SAT solving.

	* include/Client.tcc: Throw a runtime_error when there is a
	network error.

	* include/BaseDMCS.h: Move localSolve to BaseDMCS.
	Do not use global belief states.
	* include/OptDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* src/Makefile.am: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.

2010-05-02  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* include/ClaspResultGrammar.tcc: Simplify rule value. Fixed the
	bug with single line result from clasp.

2010-05-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/dimacs-small.txt: New file.
	* examples/dimacs-small-result.txt: Likewise.

	* examples/dia-4-4-2-2-1.opt1: Remove.

	* examples/dia-4-4-2-2-1_command_line.txt: Fix V for basic DMCS.
	* examples/dia-4-4-2-2-1_command_line.sh: Likewise.
	* examples/dia-4-4-2-2-1.top: Likewise.
	* examples/dia-4-4-2-2-1.opt: Likewise.

	* src/dmcsd.cpp: Do not include CnfBuilder.h and CnfGrammar.h.

	* include/LoopFormula.h: Add documentation.
	* include/SatSolver.tcc: Likewise.
	* include/Theory.h: Likewise.

	* include/CnfBuilder.h: Deprecate file.
	* include/CnfBuilder.tcc: Likewise.
	* include/CnfGrammar.h: Likewise.
	* include/CnfGrammar.tcc: Likewise.

	* include/ClaspResultBuilder.tcc: De-obfuscate code.

2010-05-01  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/tests/testMatch.cpp: Add one more
	case where we don't find a match.

	* include/DynamicConfiguration.h: Use iterator for
	controlling backtracking. Update algorithm to return context
	substitutions in stead of outputting to a queue.
	* src/DynamicConfiguration.cpp: Likewise.

	* include/ContextSubstitution.h: Add ContextMatch. Add todo.

	* include/CommandType.h: Update continues()

	* src/DynamicConfiguration.cpp: Fixed Segmentation Fault.

2010-05-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/run-tests.sh: New file.

2010-05-06  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/dmcsd.cpp: Fix cerr here and there.
	* src/dmcsc.cpp: Likewise.

	* include/StatsInfo.h: Add time_in_secs()

	* src/OptDMCS.cpp: Fix: incoming V for guessing, outgoing V
	for combining.
	* include/OptDMCS.h: Likewise.

	* include/PrimitiveMessage.h: Use history as a list.
	* src/PrimitiveDMCS.cpp: Likewise.


2010-05-06  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/genTest.cpp: Fix neighbor access

	* src/QueryPlan.cpp: used getHostName1 and getPort1 as we are still in generation mode

	* include/Context.h: Add setNeighbors method

2010-05-06  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/OptDMCS.cpp: Clean up.
	* src/PrimitiveDMCS.cpp: Likewise.

2010-05-06  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Initialize OptDMCS with global_sigs.

	* src/OptDMCS.cpp: Use ProxySignatureByLocal.

	* include/OptDMCS.h: Now inherits global sigs from BaseDMCS.
	* include/PrimitiveDMCS.h: Likewise.

	* include/BaseDMCS.h: Move global_sigs up here.
	* src/BaseDMCS.cpp: Likewise.

2010-05-06  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/ProxySignatureByLocal.h: Use ProxySignatureByLocal in PrimitiveDMCS.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/BaseDMCS.h: Likewise.

2010-05-06  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* include/Neighbor.h: Use Neighbor instead of QueryPlan to
	get hostname and port
	* src/genTest.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/BaseDMCS.cpp: Likewise.
	* include/QueryPlan.h: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/Context.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BaseDMCS.h (dmcs): Likewise.

	* src/OptDMCS.cpp: Use the right V at the right place.

2010-05-06  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Get neighbor_list from bridge rules parsing.

	* src/PrimitiveDMCS.cpp: Use neighbors from context.
	* src/OptDMCS.cpp: Likewise.

	* src/ContextGenerator.cpp: Adapt to neighbor_list.
	* src/genTest.cpp: Likewise.

	* include/Context.h: Let neighbor_list be a member of context.

	* include/ClaspResultGrammar.tcc: #if --> #ifdef

	* include/BridgeRulesBuilder.tcc: Update neighbor_list based on
	bridge atoms.

2010-05-05  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* include/QueryPlan.h: Replace Neighbors by NeighborList.
	* include/Signature.h: Replace Signatures by SignatureVec.
	* src/genTest.cpp: Likewise.
	* src/dmcsd.cpp): Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/Neighbor.h: Likewise.
	* include/Context.h: Likewise.

	* include/BridgeRulesBuilder.tcc: Build neighbor_list from
	bridge rules.
	* include/BridgeRulesBuilder.h: Likewise.
2010-05-05  Minh Dao Tran  <dao@kr.tuwien.ac.at>


	* src/OptDMCS.cpp: Adapt generation of V.
	* src/PrimitiveDMCS.cpp: Likewise.

	* src/BaseDMCS.cpp: Add case distinction whether to initiate sis
	in the constructor

	* include/Makefile.am: Add ProxySignatureByLocal.h

	* include/ProxySignatureByLocal.h: Detail the methods.


	* src/dmcsd.cpp: Create global_sigs and pass it to PrimitiveDMCS.

	* src/OptDMCS.cpp (getBeliefStates): Move construction of
	signatures from SatSolver here. Will be replaced by
	ProxySignatureByLocal.
	* src/PrimitiveDMCS.cpp (getBeliefStates): Likewise.

	* include/Signature.h: Add Signatures and SignaturesPtr.

	* include/Server.tcc: update debug information.

	* include/Process.h: templatized with ModelBuilder.

	* include/PrimitiveDMCS.h: Add sis for statistic information, add
	createGuessingSignature(). Add global_sigs.

	* include/OptDMCS.h: Add createGuessingSignature().

	* include/Context.h: Add getNeighbors().

	* include/ClaspResultBuilder.tcc: Remove sig_size and use
	local_sig.size()

	* include/ClaspResultBuilder.h: Use BeliefStateListPtr instead of
	BeliefStateListPtr&.

	* include/ClaspProcess.h: Instantiated with
	Process<ClaspResultBuilder<ClaspResultGrammar> >
	* include/ClaspProcess.h: Likewise.

	* src/BaseDMCS.cpp (localSolve): Use ClaspResultBuilder with sig,
	local_belief_states and sis_size. @todo: remove dependency on
	query_plan.
	+ new methods for creating guessing signature.

	* include/BaseSolver.h: Pass theory and sig_size to solve()
	instead of context_signature, belief_states, and theory.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.

2010-05-05  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/OptDMCS.cpp : Adjust code syntax for compilation purposes.
	* src/PrimitiveDMCS.cpp: Likewise.

	* include/ProxySignatureByLocal.h: Cleanup

	* include/ClaspResultBuilder.h : Adapt Builder to use SignatureByLocal instead of BeliefStatePtr
	* include/ClaspResultBuilder.tcc: Likewise.

	* include/BaseDMCS.h: Adapt solve to use SignatureByLocal instead of BeliefStatePtr
	* include/SatSolver.h : Likewise.
	* include/BaseSolver.h: Likewise.
	* include/SatSolver.tcc : Likewise.
	* src/BaseDMCS.cpp : Likewise.

2010-05-04  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/PrimitiveDMCS.cpp : Add ProxySignature todo items.
	* src/OptDMCS.cpp: Likewise.
	* include/SatSolver.tcc : Likewise.

	* include/ProxySignatureByLocal.h: New file.

	* include/HouseOptQPGenerator.h : Update queryplan computation.

2010-05-04  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/StatsInfo.h: Use PTime/TimeDuration instead of
	PTimePtr/TimeDurationPtr. Provide (time + #models) in statistic
	information.
	* include/ReturnMessage.h: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.

	* include/SatSolver.tcc: Fix segmetation fault.

2010-05-04  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsc.cpp: Fix output info.

	* include/ClaspResultGrammar.tcc: Fix parsing models with older
	boost.

2010-05-04  Minh Tran Dao  <dao@.kr.tuwien.ac.at>
	* src/BeliefCombination.cpp: remove some debug output.

	* include/OptDMCS.h: Adapt OptDMCS to returning
	statistic information.
	* src/OptDMCS.cpp: Likewise.
	* include/CommandType.h: Likewise.
	* src/dmcsc.cpp: Likewise.

	* include/BeliefState.h: Update operator<<
	* include/PrimitiveMessage.h: Likewise.
	* include/StatsInfo.h: Likewise.

	* src/PrimitiveDMCS.cpp: Fix SegFault and get transfer time.

	* include/ReturnMessage.h: Update outputting result.

	* include/StatsInfo.h: Update outputting result, update transfer
	time from neighbors.

2010-05-04  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/StatsInfo.h: Add STATS_DIFF and STATS_DIFF_REUSE macros.
	Do some code clean-ups.
	* src/PrimitiveDMCS.cpp: Likewise.
	* include/BaseDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/CommandType.h: Likewise.

2010-05-03  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* configure.ac: Add BOOST_DATE_TIME

	* src/PrimitiveDMCS.cpp: Add statistic information.
	* src/dmcsc.cpp: Likewise.

	* include/StatsInfo.h: Define operator<< and combine()

	* include/Server.tcc: Add some debug information.

	* include/Message.h: Remove sub-messages and put them to
	separated files.
	* include/OptDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/Session.h: Likewise.
	* include/Makefile.am: Likewise.

	* include/OptMessage.h: New file.
	* include/PrimitiveMessage.h: Likewise.
	* include/ReturnMessage.h: Likewise.

	* include/CommandType.h: Realize continues().

	* include/BaseDMCS.h: Add case distinction for StatisticInformation.

2010-05-02  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* src/Makefile.am: Add date_time library.
	* include/Makefile.am: Add StatsInfo.h

	* include/BridgeRulesBuilder.tcc: Add some debug output.
	* include/Client.tcc: Likewise.

	* include/CommandType.h: Add check for continuation.

	* include/ContextSubstitution.h: Add operator<<

	* include/Message.h (ConfigMess): Add flag LAST.

	* include/Server.h: New diagram for maintaining
	connection is case of dynamic MCS.
	* include/Server.tcc: Likewise.

	* src/dmcsc.cpp: Fix checking program options for
	dynamic/non-dynamic case.
	* src/dmcsd.cpp: Like wise.

	* src/DynamicConfiguration.cpp: doing lconfig, bind_rule
	* include/DynamicConfiguration.h: Likewise.

	* include/Rule.h: Fix operator<<

	* include/Signature.h (<<): Simplified.

	* include/ContextSubstitution.h: Add operator<<

2010-04-29  Minh Tran Dao  <dao@kr.tuwien.ac.at>

	* include/ProgramOptions.h: Add ROOT

	* src/dmcsc.cpp: Add dynamic stuff.

	* include/ContextSubstitution.h: Use ContextSubstitutions
	* include/CommandType.h: Likewise.
	* include/Message.h: Likewise.
	* src/dmcsd.cpp: Likewise.

	* src/DynamicConfiguration.cpp: Start implementing lconfig.
	* include/DynamicConfiguration.h: Likewise.

	* include/Rule.h: Define operator<< for BridgeRulePtr, BridgeRulesPtr

	* include/Client.h: Use CmdType instead of Message_t.
	* include/Client.tcc: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/OptDMCS.cpp: Likewise.
	* include/Message.h: Likewise.
	* include/CommandType.h: Likewise.

	* include/Message.h: Add ReturnMessage.
	* include/StatsInfo.h: New file.

2010-04-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/Makefile.am (dmcsd_LDADD): Linker on Linux is
	order-sensitive.

2010-04-29  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/genTest.cpp: Fixed warning with number comparison.

2010-04-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testQueryPlan.cpp: Resuscitate testQueryPlan.

	* src/tests/testTranslation.cpp: Resuscitate testTranslation.

	* src/tests/Makefile.am: Remove unused tests.
	* src/tests/testReadGraph.cpp: Likewise.
	* src/tests/testSolver.cpp: Likewise.

	* include/DimacsVisitor.h: Clean up.
	* include/LogicVisitor.h: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* include/BaseVisitor.h: Likewise.

	* include/Client.h: Remove system size from ctor.
	* include/Client.tcc: Likewise.
	* src/dmcsc.cpp: Likewise.

2010-04-27  Minh Tran Dao  <dao@dvorak.kr.tuwien.ac.at>

	* src/dmcsd.cpp: Adapt the call of static DMCS to new design of
	Server, CommandType.

	* include/PrimitiveDMCS.h: Add PrimitiveDMCSPtr.
	* include/OptDMCS.h: Add OptDMCSPtr.

	* include/Message.h: Add ConfigMessage and operator<< for it.

	* include/CommandType.h: New design for CommandType
	* include/Server.h: Likewise.
	* include/Server.tcc: Likewise.

	* include/Neighbor.h: Move type Neighbor* into Neighbor.h
	* include/QueryPlan.h: Likewise.

	* include/BridgeRulesBuilder.tcc (dmcs): Fix waring regarding schematic_type.

	* include/DynamicConfiguration.h: New file.
	* src/DynamicConfiguration.cpp: Likewise.
	* include/ContextSubstitution.h: Likewise.

	* src/OptDMCS.cpp: New file.
	* src/PrimitiveDMCS.cpp: Likewise.

	* include/OptDMCS.tcc: Remove.
	* include/PrimitiveDMCS.tcc: Likewise.

2010-04-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testMCSParser.cpp: Remove.

	* src/tests/Makefile.am: Resuscitate testCombination.
	* src/tests/testCombination.cpp: Likewise.

	* src/BeliefCombination.cpp: Use bitset to print DEBUG info.

	* include/OptDMCS.tcc: Fix DEBUG.
	* include/PrimitiveDMCS.tcc: Likewise.

	* src/tests/testParsers.cpp: Resuscitate testParsers testcase.
	* src/tests/Makefile.am: Likewise.

	* examples/dia-4-4-2-2-1_opt_dlv.txt: Likewise.
	* examples/dia-4-4-2-2-1_dlv.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line_opt.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line_opt.sh: Likewise.
	* examples/dia-4-4-2-2-1_command_line.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line.sh: Likewise.
	* examples/dia-4-4-2-2-1.top: Likewise.
	* examples/dia-4-4-2-2-1.opt: Likewise.
	* examples/dia-4-4-2-2-1.dlv: Likewise.
	* examples/dia-4-4-2-2-1-4.lp: Likewise.
	* examples/dia-4-4-2-2-1-3.lp: Likewise.
	* examples/dia-4-4-2-2-1-3.br: Likewise.
	* examples/dia-4-4-2-2-1-2.lp: Likewise.
	* examples/dia-4-4-2-2-1-2.br: Likewise.
	* examples/dia-4-4-2-2-1-1.lp: Likewise.
	* examples/dia-4-4-2-2-1-1.br: Likewise.

	* include/ParserDirector.tcc: Include stdexcept.

	* include/BeliefState.h (operator>>): Initialize BeliefStatePtr.
	Add documentation.

2010-04-26  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/genTest.cpp: Sanitize.

	* include/RingQPGenerator.h: Fix warning.
	* include/RingEdgeQPGenerator.h: Likewise.
	* include/MultipleRingQPGenerator.h: Likewise.
	* include/HouseQPGenerator.h: Likewise.
	* include/DiamondZigZagQPGenerator.h: Likewise.
	* include/DiamondQPGenerator.h: Likewise.
	* include/BinaryTreeQPGenerator.h: Likewise.

	* include/BeliefState.h: Add some BeliefSet helper functions.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/QueryPlanGenerator.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/tests/testBeliefComparison.cpp: Likewise.
	* src/QueryPlanGenerator.cpp: Likewise.

	* src/genTest.cpp: Rename Neighbors_ and NeigborsPtr_ to Neighbors
	and NeighbordPtr.
	* src/QueryPlan.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* include/SatSolver.tcc: Likewise.

	* include/QueryPlan.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/OptDMCS.tcc: Likewise.

2010-04-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testBeliefComparison.cpp: Resuscitate testBeliefComparison.
	* src/tests/Makefile.am: Likewise.

	* INSTALL: Remove.

	* TODO: Update.

	* include/LogicVisitor.h: Fix warning.

	* m4/boost.m4: Update from
	<http://github.com/tsuna/boost.m4/raw/master/build-aux/boost.m4>.

	* include/BeliefState.h: Simplify BeliefState types.
	(setEpsilon): Sets epsilon flag.
	(BeliefStateEq): Returns true iff both parameters are equal.
	* src/genTest.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/QueryPlanGenerator.cpp: Likewise.
	* src/Cache.cpp: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/tests/testClasp.cpp: Likewise.
	* include/Server.tcc: Likewise.
	* include/SatSolver.tcc: Likewise.
	* include/SatSolver.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/CommandType.h: Likewise.
	* include/Client.tcc: Likewise.
	* include/Client.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/Cache.h: Likewise.
	* include/BeliefCombination.h: Likewise.
	* include/BaseSolver.h: Likewise.

2010-04-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/clasp-wrapper.sh: Remove.

	* src/BeliefCombination.cpp: Remove debug output.
	Check that V has the same size as all other belief states.

	* include/SpiritFilePositionNode.h: Add operator<< for
	FilePositionNodeData to get suport for BOOST_SPIRIT_DEBUG.

	* include/SatSolver.tcc: Fix signed comparison.

	* include/OptDMCS.tcc: Remove debug output.
	* include/PrimitiveDMCS.tcc: Likewise.

	* include/ClaspResultGrammar.h: Add support for multi-line models
	and simplify belief state building.
	* include/ClaspResultGrammar.tcc: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/BaseBuilder.h: Likewise.

	* src/tests/testClasp.cpp: New test case for clasp result parsing.
	* src/tests/Makefile.am: Likewise.
	* examples/clasp-result-big.txt: Likewise.
	* examples/dimacs-big.txt: Likewise.

2010-04-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Release internal version 0.0.1.

	* configure.ac: Bump version to 0.1.0.

2010-04-20  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* include/BaseSolver.h: Do not use global interface variables from QueryPlan.
	* include/BaseVisitor.h: Likewise.
	* include/BeliefCombination.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/LogicVisitor.h: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.

2010-04-20  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/ProgramOptions.h: Add missing file.

2010-04-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testParsers.cpp: Resuscitate testParsers testcase.
	* src/tests/Makefile.am: Likewise.
	* examples/dia-4-4-2-2-1_opt_dlv.txt: Likewise.
	* examples/dia-4-4-2-2-1_dlv.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line_opt.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line_opt.sh: Likewise.
	* examples/dia-4-4-2-2-1_command_line.txt: Likewise.
	* examples/dia-4-4-2-2-1_command_line.sh: Likewise.
	* examples/dia-4-4-2-2-1.top: Likewise.
	* examples/dia-4-4-2-2-1.opt: Likewise.
	* examples/dia-4-4-2-2-1.dlv: Likewise.
	* examples/dia-4-4-2-2-1-4.lp: Likewise.
	* examples/dia-4-4-2-2-1-3.lp: Likewise.
	* examples/dia-4-4-2-2-1-3.br: Likewise.
	* examples/dia-4-4-2-2-1-2.lp: Likewise.
	* examples/dia-4-4-2-2-1-2.br: Likewise.
	* examples/dia-4-4-2-2-1-1.lp: Likewise.
	* examples/dia-4-4-2-2-1-1.br: Likewise.

	* include/ParserDirector.tcc: Include stdexcept.

	* include/BeliefState.h (operator>>): Initialize BeliefStatePtr.
	Add documentation.

2010-04-26  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/genTest.cpp: Sanitize.

	* include/RingQPGenerator.h: Fix warning.
	* include/RingEdgeQPGenerator.h: Likewise.
	* include/MultipleRingQPGenerator.h: Likewise.
	* include/HouseQPGenerator.h: Likewise.
	* include/DiamondZigZagQPGenerator.h: Likewise.
	* include/DiamondQPGenerator.h: Likewise.
	* include/BinaryTreeQPGenerator.h: Likewise.

	* include/BeliefState.h: Add some BeliefSet helper functions.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/QueryPlanGenerator.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/tests/testBeliefComparison.cpp: Likewise.
	* src/QueryPlanGenerator.cpp: Likewise.

	* src/genTest.cpp: Rename Neighbors_ and NeigborsPtr_ to Neighbors
	and NeighbordPtr.
	* src/QueryPlan.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* include/SatSolver.tcc: Likewise.

	* include/QueryPlan.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/OptDMCS.tcc: Likewise.

2010-04-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testBeliefComparison.cpp: Resuscitate testBeliefComparison.
	* src/tests/Makefile.am: Likewise.

	* INSTALL: Remove.

	* TODO: Update.

	* include/LogicVisitor.h: Fix warning.

	* m4/boost.m4: Update from
	<http://github.com/tsuna/boost.m4/raw/master/build-aux/boost.m4>.

	* include/BeliefState.h: Simplify BeliefState types.
	(setEpsilon): Sets epsilon flag.
	(BeliefStateEq): Returns true iff both parameters are equal.
	* src/genTest.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/QueryPlanGenerator.cpp: Likewise.
	* src/Cache.cpp: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/tests/testClasp.cpp: Likewise.
	* include/Server.tcc: Likewise.
	* include/SatSolver.tcc: Likewise.
	* include/SatSolver.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/CommandType.h: Likewise.
	* include/Client.tcc: Likewise.
	* include/Client.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/Cache.h: Likewise.
	* include/BeliefCombination.h: Likewise.
	* include/BaseSolver.h: Likewise.

2010-04-25  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/BridgeRulesBuilder.h: Update parsing for schematic
	bridge rules.
	* include/BridgeRulesBuilder.tcc: Likewise.

	* include/Variable.h: Add helper function for creating schematic
	belief.

2010-04-24  Minh Tran Dao  <dao@.kr.tuwien.ac.at>

	* include/BridgeRulesBuilder.tcc: Adapting the parsing with
	ContextTerm involved.
	* include/BridgeRulesBuilder.h: Likewise.

	* include/Variable.h: Use assertion here and there, 2 term
	construction methods.
	* src/tests/testVariable.cpp: Adapted to changes in Variable.h.

	* include/Rule.h: Use ContextTerm in BridgeAtom.

	* src/dmcsd.cpp: Matches read and stored in our internal format
	with integers.

	* examples/student.inp (matches): Change input format of matches

	* include/Match.h: Fixed copy-and-paste bug from Symbol.

	* src/tests/testMatch.cpp: New file.

	* include/Makefile.am: Add Match.h
	* src/tests/Makefile.am: Add testMatch.cpp

2010-04-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Remove VSignature.h.

2010-04-22  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* include/Variable.h: New file.
	* src/tests/testVariable.cpp: Likewise.
	* include/Match.h: Likewise.

2010-04-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/clasp-wrapper.sh: Remove.

	* src/BeliefCombination.cpp: Remove debug output.
	Check that V has the same size as all other belief states.

	* include/SpiritFilePositionNode.h: Add operator<< for
	FilePositionNodeData to get suport for BOOST_SPIRIT_DEBUG.

	* include/SatSolver.tcc: Fix signed comparison.

	* include/OptDMCS.tcc: Remove debug output.
	* include/PrimitiveDMCS.tcc: Likewise.

	* include/ClaspResultGrammar.h: Add support for multi-line models
	and simplify belief state building.
	* include/ClaspResultGrammar.tcc: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/BaseBuilder.h: Likewise.

	* src/tests/testClasp.cpp: New test case for clasp result parsing.
	* src/tests/Makefile.am: Likewise.
	* examples/clasp-result-big.txt: Likewise.
	* examples/dimacs-big.txt: Likewise.

2010-04-21  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Dynamically read signatures from config files,
	depending on the number of contexts in the pool.

	* include/BRGrammar.h: Update grammar for schematic bridge rules.
	* include/BRGrammar.tcc: Likewise.

	* include/BridgeRulesBuilder.h: Replace query_plan by global_signatures.
	* include/BridgeRulesBuilder.tcc: Likewise.

	* src/ContextGenerator.cpp: Replace Neighbors_ by Neighbors
	* src/QueryPlan.cpp: Likewise.
	* src/genTest.cpp: Likewise.
	* include/QueryPlan.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/SatSolver.tcc: Likewise.

	* include/Signature.h: Update Signature to deal with shared signatures between contexts.
	* src/tests/testSignature.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* include/ProgramOptions.h: Likewise.

2010-04-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Release internal version 0.0.1.

	* configure.ac: Bump version to 0.1.0.

2010-04-20  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* include/BaseSolver.h: Do not use global interface variables from QueryPlan.
	* include/BaseVisitor.h: Likewise.
	* include/BeliefCombination.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/LogicVisitor.h: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.

2010-04-20  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/ProgramOptions.h: Add missing file.

2010-03-26  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/Makefile.am (genTest_SOURCES): Changed the name of "genTest" binary to "dmcsGen"

	* src/genTest.cpp: Replaced command line arguments with boost program options

2010-03-25  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/Makefile.am (noinst_HEADERS): Add ProgramOptions.h

	* src/dmcsc.cpp (main): included Program options as a header
	* src/dmcsd.cpp: Likewise.
	* src/genTest.cpp: Likewise.

2010-03-23  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsc.cpp: Replaced command line arguments with boost program options
	* src/dmcsd.cpp: Likewise

	* configure.ac: Add BOOST_PROGRAM_OPTIONS
	* src/Makefile.am: Likewise

2010-03-03  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsc.cpp: Fix debug output.
	* include/PrimitiveDMCS.tcc: Likewise.

2010-03-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/ProcessCommandLine.h: Remove.

	* include/BRGrammar.h: Update copyright information.
	* include/BRGrammar.tcc: Likewise.
	* include/BaseBuilder.h: Likewise.
	* include/BaseDMCS.h: Likewise.
	* include/BaseSolver.h: Likewise.
	* include/BaseVisitor.h: Likewise.
	* include/BeliefCombination.h: Likewise.
	* include/BeliefState.h: Likewise.
	* include/BinaryTreeQPGenerator.h: Likewise.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.
	* include/Cache.h: Likewise.
	* include/ClaspProcess.h: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/ClaspResultGrammar.h: Likewise.
	* include/ClaspResultGrammar.tcc: Likewise.
	* include/Client.h: Likewise.
	* include/Client.tcc: Likewise.
	* include/CnfBuilder.h: Likewise.
	* include/CnfBuilder.tcc: Likewise.
	* include/CnfGrammar.h: Likewise.
	* include/CnfGrammar.tcc: Likewise.
	* include/CommandType.h: Likewise.
	* include/Context.h: Likewise.
	* include/ContextGenerator.h: Likewise.
	* include/DLVVisitor.h: Likewise.
	* include/DiamondOptQPGenerator.h: Likewise.
	* include/DiamondQPGenerator.h: Likewise.
	* include/DiamondZigZagOptQPGenerator.h: Likewise.
	* include/DiamondZigZagQPGenerator.h: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/EquiCNFLocalLoopFormulaBuilder.h: Likewise.
	* include/HouseOptQPGenerator.h: Likewise.
	* include/HouseQPGenerator.h: Likewise.
	* include/IMPLocalLoopFormulaBuilder.h: Likewise.
	* include/LPGrammar.h: Likewise.
	* include/LocalKBBuilder.h: Likewise.
	* include/LocalKBBuilder.tcc: Likewise.
	* include/LocalLoopFormulaBuilder.h: Likewise.
	* include/LogicVisitor.h: Likewise.
	* include/LoopFormula.h: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/LoopFormulaDirector.h: Likewise.
	* include/Makefile.am: Likewise.
	* include/Message.h: Likewise.
	* include/MultipleRingOptQPGenerator.h: Likewise.
	* include/MultipleRingQPGenerator.h: Likewise.
	* include/Neighbor.h: Likewise.
	* include/OptDMCS.h: Likewise.
	* include/OptDMCS.tcc: Likewise.
	* include/ParserDirector.h: Likewise.
	* include/ParserDirector.tcc: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* include/PrimitiveDMCS.tcc: Likewise.
	* include/Process.h: Likewise.
	* include/ProcessBuf.h: Likewise.
	* include/PropositionalASPGrammar.h: Likewise.
	* include/PropositionalASPGrammar.tcc: Likewise.
	* include/QueryPlan.h: Likewise.
	* include/QueryPlanGenerator.h: Likewise.
	* include/QueryPlanWriter.h: Likewise.
	* include/RingEdgeQPGenerator.h: Likewise.
	* include/RingOptQPGenerator.h: Likewise.
	* include/RingQPGenerator.h: Likewise.
	* include/Rule.h: Likewise.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.
	* include/Server.h: Likewise.
	* include/Server.tcc: Likewise.
	* include/Session.h: Likewise.
	* include/Signature.h: Likewise.
	* include/SpiritDebugging.h: Likewise.
	* include/SpiritFilePositionNode.h: Likewise.
	* include/Theory.h: Likewise.
	* src/BeliefCombination.cpp: Likewise.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* src/Cache.cpp: Likewise.
	* src/ClaspProcess.cpp: Likewise.
	* src/ContextGenerator.cpp: Likewise.
	* src/DLVVisitor.cpp: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* src/IMPLocalLoopFormulaBuilder.cpp: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.
	* src/LogicVisitor.cpp: Likewise.
	* src/ProcessBuf.cpp: Likewise.
	* src/QueryPlan.cpp: Likewise.
	* src/QueryPlanGenerator.cpp: Likewise.
	* src/dmcsc.cpp: Likewise.
	* src/dmcsd.cpp: Likewise.
	* src/genTest.cpp: Likewise.

2010-03-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/BeliefState.h: Fix @file.

	* TODO: Update.

	* Makefile.am: Add support for doxygen.
	* configure.ac: Likewise.
	* doxygen.am: Likewise.
	* doxygen.cfg: Likewise.
	* m4/doxygen.m4: Likewise.

2010-02-02  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/LogicVisitor.cpp: Fixed a printing typo

	* src/genTest.cpp: Update DLV commands

	* include/QueryPlan.h: Add getSignature1 function.
	* src/QueryPlan.cpp: Likewise.

	* include/BridgeRulesBuilder.tcc: Extended an if condition.

2010-02-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/Signature.h (operator>>): Add operator>> for Signature.

2010-02-01  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/BridgeRulesBuilder.tcc: Revert BridgeRulesBuilder to version 1410
	* include/BridgeRulesBuilder.h : Likewise

2010-01-29  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/clasp-wrapper.sh: New file, which needs to be copied to /usr/local/bin.
	Then configure again using: CLASP=/usr/local/bin/clasp-wrapper.sh
	(This is a quick hack to deal with multiple line answers from clasp).

2010-01-29  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/genTest.cpp: Add count parameter to dlv commands.

	* src/LogicVisitor.cpp: Code refactoring.
	* include/LogicVisitor.h: Likewise.
	* src/DLVVisitor.cpp: Likewise.
	* include/DLVVisitor.h: Likwise.

	* src/genTest.cpp: Autogenerate DLV files.
	* src/DLVVisitor.cpp: Likewise.
	* include/LogicVisitor.h: Likewise.
	* include/DLVVisitor.h: Likwise.

	* src/Makefile.am: Update genTest sources.

	* src/LogicVisitor.cpp: Code Clean up.

	* include/Makefile.am: Update Headers.

2010-01-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/QueryPlan.h (QueryPlan::vmap): Add mapping from context
	ids to vertex ids, can be made more efficient.
	* src/QueryPlan.cpp: Likewise.

2010-01-27  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/LocalLoopFormulaBuilder.cpp: Add assertions.

	* include/Server.tcc (handle_session): Code clean up.

	* include/BridgeRulesBuilder.tcc (build_bridge_atom): Handled the
	case that a bridge atom might have been parsed earlier.

2010-01-24  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/Client.cpp: File removed.

	* include/Client.tcc: Create template for Client.
	* include/Client.h: Likewise.

	* include/RingOptQPGenerator.h: Fixed a bug.
	* include/MultipleRingOptQPGenerator.h: Likewise.

2010-01-23  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/genTest.cpp (print_command_lines): New method.

	* include/QueryPlan.h: new method for reading graph from file.
	* src/QueryPlan.cpp: Likewise.

2010-01-23  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/MultipleRingOptQPGenerator.h: Create Opt Multiple Ring local interface

	* include/RingOptQPGenerator.h: Create Opt Ring local interface

	* include/HouseOptQPGenerator.h: Create Opt House local interface
	* src/genTest.cpp: Likewise

	* include/DiamondOptQPGenerator.h: Code clean up
	* include/DiamondZigZagOptQPGenerator.h: Likewise

2010-01-22  Dao Tran Minh  <dao@kr.tuwien.ac.at>
	* src/QueryPlan.cpp: more methods for manipulating the inside graph.
	(getMinV/putMinV): New methods for global V.
	(getGraph/putGraph): New methods for graph.
	(getEdges): New method for returning edges.
	(remove_connection): New method for removing an edge. Used for the optimal query plan.

	* include/DiamondOptQPGenerator.h (DiamondQPGenerator): New file.
	* src/QueryPlanGenerator.cpp: Likewise.

	* include/DiamondZigZagOptQPGenerator.h : create local interface.

2010-01-21  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/Makefile.am: Update Headers

	* src/genTest.cpp: Generate Optimal Query Plans.
	* include/RingOptQPGenerator.h: Likewise.
	* include/MultipleRingOptQPGenerator.h: Likewise.
	* include/HouseOptQPGenerator.h: Likewise.

	* src/genTest.cpp: Generate Topologies within QueryPlanGenerator
	* include/RingQPGenerator.h: Likewise
	* include/RingEdgeQPGenerator.h: Likwise
	* include/MultipleRingQPGenerator.h: Likewise
	* include/HouseQPGenerator.h:Likwise
	* include/BinaryTreeQPGenerator.h: Likwise

	* include/Makefile.am:Update Headers
	
2010-01-20  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/tests/testTranslation.cpp: Update Loop Formula builder's invocation.
	* src/dmcsd.cpp: Likewise.

	* src/Makefile.am: Update translation lib

	* src/LocalLoopFormulaBuilder.cpp: Fix Graph index problem

	* include/Makefile.am: Add header files

	* include/IMPLocalLoopFormulaBuilder.h: Update Constructor.
	* include/LocalLoopFormulaBuilder.h: Likewise.

	* include/Context.h: removed unnecessary "&".

	* include/CNFLocalLoopFormulaBuilder.h: Add Equisatisfiable CNF LF Builder.
	* include/EquiCNFLocalLoopFormulaBuilder.h: Likewise.

	* include/BaseVisitor.h: Update to use Signature instead of BiMap.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/BridgeRulesBuilder.h: Likwise.
	* include/DimacsVisitor.h: Likewise.
	* include/LocalKBBuilder.h:Likewise. 
	* include/LocalKBBuilder.tcc: Likewise.
	* include/LogicVisitor.h: Likewise.
	* src/DimacsVisitor.cpp: Likewise.

2010-01-20  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/ContextGenerator.cpp: Fix bug with cover_neighbors().

	* include/QueryPlan.h: Adapt to have hostname, port as vertex
	property, BeliefStatePtr as edge property.
	* include/QueryPlanWriter.h: Likewise.
	* src/QueryPlan.cpp: Likewise.

	* include/BeliefState.h: Add operator>>, operator<< for BeliefStatePtr

2010-01-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/Signature.h: Add index to context IDs.

2010-01-19  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/Makefile.am: Update translation lib.

	* src/LocalLoopFormulaBuilder.cpp: Code refactoring and optimisation
	* src/ImpLocalLoopFormulaBuilder.cpp: Likewise.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* include/Theory.h:Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/LoopFormulaDirector.h:Likewise.
	* include/LoopFormula.h: Likewise.
	* include/LocalLoopFormulaBuilder.h: Likewise.
	* include/IMPLocalLoopFormulaBuilder.h: Likewise.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.

2010-01-19  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/tests/testReadGraph.cpp: More experiments.

	* include/QueryPlan.h: New file.
	* src/QueryPlan.cpp: Likewise.
	* include/QueryPlanWriter.h: Likewise.
	* src/tests/testQueryPlan.cpp: Likewise.

2010-01-19  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* src/dmcsd.cpp (Server): Add Loop formula computation

	* include/PrimitiveDMCS.h (LoopFormulaBuilder): Add theory as a part of PrimitiveDMCS.
	* include/Server.h (catch): Likewise.
	* src/PrimitiveDMCS.cpp (visitCNFFormula):Likewise.
	* src/Server.cpp (localSolve): Likewise.

	* include/CNFLocalLoopFormulaBuilder.h: Update to accomodate the new Signature.
	* include/DimacsVisitor.h: likewise.
	* include/LocalLoopFormulaBuilder.h:Likwise.
	* src/DimacsVisitor.cpp: Likwise.

	* include/BaseSolver.h: Modify solve to take theory as input.
	* include/SatSolver.h: Likwise.
	* include/SatSolver.tcc: Likwise.

	* include/BaseDMCS.h (B): Add typedef DMCSPtr.

	* src/genTest.cpp: Add Multiple Ring Topology.
	* include/MultipleRingTopoGenerator.h: Likewise.
	* include/Makefile.am: Likewise.

2010-01-19  Dao Tran Minh  <dao@kr.tuwien.ac.at>
	* src/tests/testReadGraph.cpp: New file.

2010-01-18  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>

	* include/HouseTopoGenerator.h: Add House topology.
	* src/genTest.cpp: Likewise.
	* include/Makefile.am: Likewise.

	* include/RingEdgeTopoGenerator.h: Add Binary tree topology.
	* src/genTest.cpp (noinst_HEADERS): Likewise.
	* include/Makefile.am (noinst_HEADERS):Likewise.

	* src/LogicVisitor.cpp: Fixed bridge atom names.
	* include/LogicVisitor.h: Likewise.

	* include/BaseVisitor.h: Code clean up
	* src/genTest.cpp : Likewise

	* src/LogicVisitor.cpp (BaseVisitor): Visit literals as char instead of int
	* include/LogicVisitor.h (BaseVisitor): Likewise.

	* include/RingEdgeTopoGenerator.h: Add Ring topology with arbitrary additional edges
	* src/genTest.cpp: Likewise.

2010-01-17  Seif El-Din Bairakdar  <seif.bairakdar@gmail.com>
	* include/Makefile.am (L): Add missing headers

	* src/LocalLoopFormulaBuilder.cpp: Removed local ID generation
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/LocalLoopFormulaBuilder.h: Likewise.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.
	* src/tests/testTranslation.cpp: Likewise.

	* src/genTest.cpp: Add Pure Ring topolgy generator

	* include/RingTopoGenerator.h: New file

2010-01-17  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/genTest.cpp: Add generating contexts.
	* src/LogicVisitor.h: Use references.
	* src/LogicVisitor.cpp: Likewise.

	* include/Context.h: add cover_neighbors().

	* include/ContextGenerator.h: New file.
	* src/ContextGenerator.cpp: Likewise.

2010-01-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dmcsd.cpp: Use NeighborsPtr.

	* src/PrimitiveDMCS.cpp: Move caching to DMCS.
	* include/PrimitiveDMCS.h: Likewise.

	* include/Cache.h: Typedef CachePtr and CacheStatsPtr.

	* src/LogicVisitor.cpp: Removed BridgeAtomPtr.
	* include/LogicVisitor.h: Likewise.

	* include/SatSolver.tcc (solve): Use Signature.

	* include/ClaspResultBuilder.tcc: Optimize.

	* include/Signature.h: Inline operator<<'s.

	* src/dmcsd.cpp: Update to Signature (preliminary).

	* include/Server.h: Use ContextPtr.
	* include/BaseDMCS.h: Likewise.
	* include/PrimitiveDMCS.h: Likewise.
	* src/PrimitiveDMCS.cpp: Likewise.

	* src/Server.cpp: Likewise.

	* include/Rule.h: Remove Signature from here.
	Add Literal type
	(getHead): Fixed const-correctness.

	* include/Neighbor.h: Add documentation.
	* include/Signature.h: Likewise.

	* include/Context.h: Add Signature member.

2010-01-16  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/Makefile.am: Add testSignature.cpp.
	* src/tests/testSignature.cpp: Likewise.

	* include/Makefile.am: Add Signature.h.
	* include/Signature.h: Likewise.

2010-01-16  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/genTest.cpp: Restart.

	* include/TopologyGenerator.h: New file.
	* include/DiamondTopoGenerator.h: Likewise.
	* include/DiamondZigZagTopoGenerator.h: Likewise.

	* include/Context.h: Replace BiMap stuff by Rules stuff.

	* include/Neighbor.h: Simplify.

2010-01-15  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* src/LogicVisitor.cpp (noinst_HEADERS): Create Logic Visitor.
	* include/LogicVisitor.h: Likewise.

	* src/Makefile.am (noinst_HEADERS): Add LogicVisitor.
	* include/Makefile.am (noinst_HEADERS): Likewise.

2010-01-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/ParserDirector.tcc: Roll back @1280.
	* include/SatSolver.tcc: Likewise.
	* src/DimacsVisitor.cpp: Likewise.
	* src/tests/testSolver.cpp: Likewise.

	* src/ProcessBuf.cpp (ProcessBuf): Ignore SIGCHLD, otw. Boost.Test
	installs its own signal handler.

	* include/Makefile.am (noinst_HEADERS): Remove CNFFormula.h.

2010-01-14  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* include/Theory.h: Added CNF creation methods

	* src/tests/testTranslation.cpp : Substituted CNFFormula with Theory in all Loop Formula implementation
	* src/DimacsVisitor.cpp: Likewise.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* include/LoopFormula.h: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.

2010-01-12  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dmcsc.cpp (main): Get the system size from the number of alphabets.

	* src/Client.cpp: Instantiate BeliefStates with system size.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/tests/testBeliefComparison.cpp: Likewise.
	* src/tests/testCombination.cpp: Likewise.
	* src/tests/testParsers.cpp: Likewise.
	* src/tests/testSolver.cpp: Likewise.

	* include/Server.h (Server::dmcs): New member.
	(Server::belief_states): Remove.
	* src/Server.cpp: Likewise.

	* include/Message.h (Message::getSystemSize): New method.

	* include/BeliefState.h (isEpsilon): New function.
	(BeliefStates::system_size): New member.
	(operator<<): Fix BeliefSets streaming.

	* include/BeliefCombination.h (combine): Optimize and document.

	* include/BaseSolver.h: Fix const correctness for Context.
	* include/ClaspResultBuilder.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/Context.h: Likewise.
	* include/SatSolver.h: Likewise.
	* include/SatSolver.tcc: Likewise.

	* include/BaseDMCS.h: Add Context member variable.
	* include/PrimitiveDMCS.h: Likewise.

2010-01-11  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/Makefile.am: Resuscitate testSolver.
	* src/tests/testSolver.cpp: Likewise.

	* m4/boost.m4: New version from
	<http://github.com/tsuna/boost.m4/raw/master/build-aux/boost.m4>.

	* include/SatSolver.h: Add ParserGrammar as template parameter for
	removing the coupling with ClaspResultBuilder.
	* include/SatSolver.tcc: Likewise.
	* src/ClaspProcess.cpp: Likewise.

	* include/ParserDirector.tcc (ParserDirector::parse): Throw
	std::runtime_error instead of printing errors.

	* include/BeliefState.h: Add operator<< for BeliefSets.

	* include/CNFFormula.h (CNFFormula::expandTwoCNFFormulae): Prevent
	unnecessary copying of stuff.

2010-01-10  Dao Tran Minh  <dao@kr.tuwien.ac.at>

	* src/genTest.cpp (gen_command_lines): Adapt command line options.

	* include/BRGrammar.tcc (definition): Fix bug with empty input file.
	* include/PropositionalASPGrammar.tcc (definition): Likewise.
	* include/CnfGrammar.tcc (definition): Likewise.

2010-01-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/testParsers.cpp: Update testcase.
	* src/tests/testTranslation.cpp: Likewise.

	* src/tests/Makefile.am (TESTS): Add testTranslation.

	* include/ProcessCommandLine.h: Add c++-mode.
	* include/Rule.h: Likewise.

	* include/CNFFormula.h: Add const qualifiers.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.

2010-01-10  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* src/tests/testTranslation.cpp: Simple code optimisation.
	* src/DimacsVisitor.cpp: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/CNFFormula.h : Likewise.

2010-01-09  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* src/tests/testTranslation.cpp: Testing Dimacs Visitor with CNF builder.

	* src/Makefile.am: Update translation lib.

	* src/DimacsVisitor.cpp: Adjust DimacsVisitor to work with CNF loop formula.
	* src/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* include/CNFFormula.h: Likewise.
	* include/BaseVisitor.h: Likewise.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.

	* include/LoopFormulaBuilder.h: Move getLocalId() to the generic builder.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.
	* include/LocalLoopFormulaBuilder.h: Likewise.

	* include/Makefile.am: Add headers.

	* include/CNFFormula.h: Create crude CNF loop formula Builder.
	* include/CNFLocalLoopFormulaBuilder.h: Likewise.
	* include/CNFLocalLoopFormulaBuilder.cpp: Likewise.
	* include/LoopFormula.h: Likewise.

2010-01-08  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/Server.cpp: Move main() to dmcsd.cpp.
	* src/dmcsd.cpp: Likewise.
	* src/Makefile.am: Likewise.

	* src/Cache.cpp: Include config.h.
	* src/DimacsVisitor.cpp: Likewise.
	* src/Client.cpp: Likewise.
	* src/ClaspProcess.cpp: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likwise.
	* src/PrimitiveDMCS.cpp: Likewise.
	* src/ProcessBuf.cpp: Likewise.
	* src/genTest.cpp: Likewise.

	* AUTHORS: Add Seif.

	* src/LocalLoopFormulaBuilder.cpp (LocalLoopFormulaBuilder::getLocalId): Optimize local ID finding/creation.

	* include/LocalLoopFormulaBuilder.h: Likewise.

	* include/LoopFormulaDirector.h: Protect debug info with #if defined(DEBUG).

	* include/LoopFormulaBuilder.h: Add todo.

2010-01-08  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* src/LocalLoopFormulaBuilder.cpp: Code optimisation.
	* include/LocalLoopFormulaBuilder.h: Likewise.

	* src/tests/Makefile.am: Enable testTranslation.
	* src/tests/testTranslation.cpp: Likewise.

	* include/Rule.h: Add inline to helper functions.

	* include/LocalLoopFormulaBuilder.h: Adjust refactored code to work, fixed local vs global Id problem.
	* include/LoopFormulaDirector.h: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/LoopFormula.h: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.

2010-01-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/Makefile.am (testTranslation_SOURCES): Add testTranslation.
	* src/tests/testTranslation.cpp: Likewise.

	* src/Makefile.am (noinst_LIBRARIES): Create libtranslation.a.

	* include/Makefile.am (noinst_HEADERS): Add new headers.

	* include/Rule.h: Add some helper functions.

	* include/LocalLoopFormulaBuilder.h: Code refactoring and optimization.
	* include/LoopFormula.h: Likewise.
	* include/LoopFormulaDirector.h: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* src/LocalLoopFormulaBuilder.cpp: Likewise.

	* include/ContextLF.h: Delete.
        * include/Kappa.h: Likewise.
	* include/MultiContextSystem.h: Likewise.
	* src/ContextLF.cpp: Likewise.
        * src/Kappa.cpp: Likewise.
	* src/LocalBuilder.cpp: Likewise.
	* src/LoopFormula.cpp: Likewise.
	* src/MultiContextSystem.cpp: Likewise.

2010-01-06  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* include/LocalKBBuilder.tcc: returns local kb signature.
	* include/LocalKBBuilder.h: new member: sig
	* include/BridgeRulesBuilder.tcc: returns br's head signature and
	bridge body atoms' signature.
	* include/BridgeRulesBuilder.h: new members: sig and br
	* include/Rule.h: New type for signatures.
	* src/Server.cpp: adapt to having sig and br.
	* src/test/testMCSParser.cpp: Likewise.

2010-01-05  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* src/ContextLF.cpp (ContextLF::checkStronglyConnected): Check if
	loop is strongly connected in induced subgraph.
	(ContextLF::checkAllInducedSubGraphs): Enumerates all possible
	loops.
	* include/ContextLF.h: Likewise.

2010-01-05  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* src/genTest.cpp: output topology information in graphviz format.

2010-01-04  Seif El-Din Bairakdar  <bairakdar@kr.tuwien.ac.at>

	* include/MultiContextSystem.h: Add loop formula implementation.
	* include/LoopFormulaDirector.h: Likewise.
	* include/LoopFormulaBuilder.h: Likewise.
	* include/LoopFormula.h: Likewise.
	* include/LFPrintVisitor.h: Likewise.
	* include/Kappa.h: Likewise.
	* include/ContextLF.h: Likewise.
	* src/MultiContextSystem.cpp: Likewise.
	* src/LoopFormula.cpp: Likewise.
	* src/LFPrimitivePrintVisitor.cpp: Likewise.
	* src/Kappa.cpp: Likewise.
	* src/ContextLF.cpp: Likewise.

	* examples/bridgeRules.txt: New file.
	* examples/rules.txt: Likewise.

2010-01-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/Makefile.am: Rename libcontext.a to libcache.a.
	* src/tests/Makefile.am: Likewise.

	* include/Makefile.am: Add Neighbor.h.
	* include/Neighbor.h: Likewise.

	* include/Context.h: Decouple CNF parsing from Context.
	* src/Context.cpp: Likewise.
	* src/Server.cpp: Likewise.
	* src/tests/testParsers.cpp: Likewise.

	* include/CnfBuilder.h (CnfBuilder::getLocalSATId): New method.
	* include/CnfBuilder.tcc: Likewise.

	* include/BeliefState.h: Clean up.

	* include/BaseVisitor.h: Use const arguments.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/DimacsVisitor.h: Likewise.
	* src/DimacsVisitor.cpp: Likewise.

2010-01-03  Minh Dao-Tran  <dao@kr.tuwien.ac.at>

	* include/LocalKBBuilder.tcc: Adapt buildNode to building a rule.

	* src/genTest.cpp: Output topology information in a text file.
	Generate 2 files (local kb and bridge rules) for each context.
	Adapt the command lines wrt the input.

	* include/LocalKBBuilder.tcc: Adapt buildNode to building a rule.

2010-01-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/tests/Makefile.am: Enable testParsers.
	* src/tests/testParsers.cpp: Likewise.

	* include/ParserDirector.h (ParserDirector::setBuilder): Move ctor parameter.
	* include/ParserDirector.tcc: Likewise.
	* include/SatSolver.tcc: Likewise.
	* src/tests/testMCSParser.cpp:Likewise.

	* include/Context.h (Context::print_theory): Remove since it
	causes bad dependencies on DimacsVisitor.
	* src/Context.cpp: Likewise.

	* include/BaseModelBuilder.h: Remove dead file.
	* include/Makefile.am: Likewise.

	* include/BaseBuilder.h (BaseBuilder::buildNode): Rename BaseBuilder::build.
	* include/BridgeRulesBuilder.h: Likewise.
	* include/BridgeRulesBuilder.tcc: Likewise.
	* include/ClaspResultBuilder.h: Likewise.
	* include/ClaspResultBuilder.tcc: Likewise.
	* include/CnfBuilder.h: Likewise.
	* include/CnfBuilder.tcc: Likewise.
	* include/LocalKBBuilder.h: Likewise.
	* include/LocalKBBuilder.tcc: Likewise.

	* src/tests/testClasp.cpp: Compare output of clasp with clasp-result.txt.
	* examples/clasp-result.txt: Likewise.

2010-01-02  Minh Dao-Tran  <dao@kr.tuwien.ac.at>
	* include/BridgeRulesBuilder.h: New file.
	* include/BridgeRulesBuilder.tcc:Likewise.
	* include/BRGrammar.h: Likewise.
	* include/BRGrammar.tcc: Likewise.
	* include/MCSGrammar.h: Separate local KB grammar and bridge rules grammar.
	* include/MCSGrammar.tcc: Likewise.

2010-01-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/ClaspProcess.cpp: Add comment on spurious "--" command line option.

	* src/Makefile.am: Add libcontext.a and libsatsolver.a.

	* configure.ac: Add support for Boost.Test.
	* src/tests/Makefile.am: Likewise.
	* src/tests/testClasp.cpp: Likewise.

2009-12-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* INSTALL: Update.

	* src/genTest.cpp: Enable genTest binary.
	(gen_command_lines): Use TESTSDIR, DMCSD and DMCSC.

	* src/Makefile.am: Likewise.

2009-12-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/Makefile.am: Use dmcsc instead of testClient.

	* configure.ac: Fix Boost checking.

	* m4/boost.m4: Likewise.

	* src/tests/Makefile.am: Fix automake files.

	* README: Add required files.
	* INSTALL: Likewise.
	* COPYING: Likewise.

